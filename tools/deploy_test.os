#Использовать 1commands
#Использовать logos
Перем Лог;
Перем БылиОшибки;

Функция СписокБаз()
    ЧтениеJSON = Новый ЧтениеJSON();
    ЧтениеJSON.ОткрытьФайл("tools/baselist.json", "UTF-8");
    Результат = ПрочитатьJSON(ЧтениеJSON);
    Возврат Результат;
КонецФункции

Процедура ОбновитьБазу(ДанныеПодключения) Экспорт
    Лог.Информация("Начало обновления: " + ДанныеПодключения.Имя + " Строка подключения: " + ДанныеПодключения.СтрокаПодключения);
    Команда = Новый Команда;
    Команда.УстановитьСтрокуЗапуска("vrunner load --src=./build/conf.cf --ibconnection " + ДанныеПодключения.СтрокаПодключения);
    КодВозврата = Команда.Исполнить();
    Если НЕ КодВозврата = 0 Тогда
        БылиОшибки = Истина;
    КонецЕсли;
    Лог.Информация("Результат обновления: " + ДанныеПодключения.Имя);
    Сообщить(Команда.ПолучитьВывод());
    Лог.Информация("Конец обновления: " + ДанныеПодключения.Имя);
КонецПроцедуры

Процедура ОбновитьБазы(МассивБаз, РазмерОчереди)
    
    ВсегоБаз = МассивБаз.Количество();
    АктивныеФЗ = Новый Массив();
    
    Для сч = 1 по ВсегоБаз Цикл
        СписокФЗ = ФоновыеЗадания.ПолучитьФоновыеЗадания();
        Если СписокФЗ.Количество() >= РазмерОчереди Тогда
            ФоновыеЗадания.ОжидатьЛюбое(АктивныеФЗ);
        КонецЕсли;
        Параметры = Новый Массив();
        Приостановить(100);
        Параметры.Добавить(МассивБаз[0]);
        АктивныеФЗ.Добавить(ФоновыеЗадания.Выполнить(ЭтотОбъект, "ОбновитьБазу", Параметры));
        МассивБаз.Удалить(0);
    КонецЦикла;
    ФоновыеЗадания.ОжидатьЗавершенияЗадач();

КонецПроцедуры

Лог = Логирование.ПолучитьЛог("onescript.confbuilder");
МассивБаз = СписокБаз();
РазмерОчереди = 2; // для параллельного обновления баз
БылиОшибки = Ложь;
Лог.Информация("Прочитано баз из настроке: " + МассивБаз.Количество());
ОбновитьБазы(МассивБаз, РазмерОчереди);
Если БылиОшибки Тогда
    Лог.Ошибка("В ходе обновления возникли ошибки");
    ЗавершитьРаботу(1);
КонецЕсли;
